{"version":3,"sources":["actions/constants.js","actions/projectAction.js","components/Project/ProjectItem.js","components/Project/CreateProjectBotton.js","components/Dashboard.js","components/Utils/setJWTToken.js","actions/authAction.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/authReducer.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProejctTasks/ProjectTask.js","actions/backlogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProejctTasks/AddProjectTask.js","components/ProjectBoard/ProejctTasks/UpdateProjectTask.js","components/Layout/WelcomePage.js","components/UserAuth/Login.js","components/UserAuth/Register.js","components/Utils/AuthRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onClickDelete","id","props","deleteProject","this","className","projectIdentifier","projectName","description","start_date","end_date","Link","to","onClick","bind","Component","connect","delete","CreateProjectBotton","Dashboard","getProjects","projects","map","protoTypes","PropTypes","object","isRequired","func","state","get","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","isNavCollapsed","handleNavCollapse","setState","prevState","window","location","href","headerLinks","auth","isValidToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","class","AddProject","errors","onChange","onSubmit","e","target","name","value","preventDefault","newProject","nextProps","classnames","placeholder","initialstate","booleanActionPayload","project_tasks","project_task","initialState","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","console","log","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","onDeleteClick","confirm","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","res","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","WelcomePage","style","marginRight","Login","username","password","LoginRequest","login","Loginrequest","setItem","decoded","jwt_decode","Register","confirmPassword","createUser","required","component","otherProps","Route","render","Redirect","jwtToken","getItem","decoded_jwt","currentTime","Date","now","exp","App","exact","path","Switch","AddPoject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0947d0d.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./constants\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n}\n\nexport const getProjects = () => async dispatch => {\n    const response = await axios.get(\"/api/project/all\");\n    dispatch({\n        type:GET_PROJECTS,\n        payload: response.data\n    });\n}\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const response = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type:GET_PROJECT,\n            payload: response.data\n        });\n    } catch(err) {\n        history.push(\"/dashboard\")\n    }\n\n}\n\nexport const deleteProject = id => async dispatch => {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n        type: DELETE_PROJECT,\n        payload: id\n    })\n}\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { deleteProject } from '../../actions/projectAction';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\n\nclass ProjectItem extends Component {\n    onClickDelete = id => {\n        this.props.deleteProject(id);\n    }\n\n    render() {\n        const { project } = this.props;\n        \n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                            <span>Start Date: {project.start_date}</span>\n                            <br></br>\n                            <span>Due Date: {project.end_date}</span>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n                                \n                                <li \n                                    className=\"list-group-item delete\"\n                                    onClick={this.onClickDelete.bind(\n                                        this,\n                                        project.projectIdentifier\n                                    )}>\n                                    \n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                </li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\n\nexport default connect( \n    null,\n    { deleteProject }\n)(ProjectItem)","import React, { Fragment } from 'react';\nimport { Link } from \"react-router-dom\"\n\nconst CreateProjectBotton = () => {\n    return (\n        <Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-dark btn-lg\">\n                Create a Project\n            </Link>\n        </Fragment>\n    )\n}\n\nexport default CreateProjectBotton","import React, { Component } from 'react'\nimport ProjectItem from './Project/ProjectItem'\nimport CreateProjectBotton from './Project/CreateProjectBotton'\nimport PropTypes from \"prop-types\"\nimport { connect } from 'react-redux'\nimport { getProjects } from '../actions/projectAction'\n\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const { projects } = this.props.projects;\n\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectBotton />\n                            <br />\n                            <hr />\n                            {projects.map(project => (\n                              <ProjectItem key={project.id} project={project} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n                )}\n}\n\nDashboard.protoTypes = { \n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    projects: state.projects\n})\n\nexport default connect(\n    mapStateToProps,\n    { getProjects }\n)(Dashboard)","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./constants\";\nimport setJWTToken from \"../components/Utils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createUser = (user, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", user);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (Loginrequest) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/users/login\", Loginrequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authAction';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isNavCollapsed: true,\n    };\n    this.handleNavCollapse = this.handleNavCollapse.bind(this);\n  }\n\n  handleNavCollapse() {\n    this.setState((prevState) => ({\n      isNavCollapsed: !prevState.isNavCollapsed,\n    }));\n  }\n\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { isValidToken, user } = this.props.auth;\n\n    const userIsAuthenticated = (\n      <div\n        className={`${\n          this.state.isNavCollapsed ? \"collapse\" : \"\"\n        } navbar-collapse`}\n        id=\"mobile-nav\"\n      >\n        <ul className=\"navbar-nav mr-auto\">\n          <Link className=\"nav-link\" to=\"/dashboard\">\n            Dashboard\n          </Link>\n        </ul>\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div\n      className={`${\n        this.state.isNavCollapsed ? \"collapse\" : \"\"\n      } navbar-collapse`}\n      id=\"mobile-nav\"\n    >\n      <ul className=\"navbar-nav mr-auto\">\n        <Link className=\"nav-link\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      </ul>\n      <ul className=\"nav navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link \" to=\"/register\">\n            Sign Up\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    </div>\n    );\n\n    let headerLinks\n\n    if (isValidToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Agile Develop Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#mobile-nav\"\n            aria-controls=\"mobile-nav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n            onClick={this.handleNavCollapse}\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          {headerLinks}\n          \n        </div>\n      </nav>\n    );\n  }\n}\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from 'classnames';\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            projectName: \"\", \n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n         };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        this.props.createProject(newProject, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    render() {\n        const { errors } = this.state\n       \n        return (\n            <div>\n              <div className=\"project\">\n                  <div className=\"container\">\n                      <div className=\"row\">\n                          <div className=\"col-md-8 m-auto\">\n                              <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                  <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.projectName\n                                        })} \n                                        placeholder=\"Project Name\" \n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectName}\n                                        </div>\n                                    )} \n                                    <p></p>\n                                  </div>\n                                  <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.projectIdentifier\n                                        })} \n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectIdentifier}\n                                        </div>\n                                    )} \n                                    <p></p>\n                                  </div>\n                                  <div className=\"form-group\">\n                                     <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.description\n                                        })}  \n                                        placeholder=\"Project Description\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )} \n                                    <p></p>\n                                  </div>\n                                  <h6>Start Date</h6>\n                                  <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                    <p></p>\n                                  </div>\n                                  <h6>Estimated End Date</h6>\n                                  <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"end_date\" \n                                        value={this.state.end_date}\n                                        onChange={this.onChange} \n                                    />\n                                  </div>\n                                    <input \n                                        type=\"submit\" \n                                        className=\"btn btn-secondary btn-block mt-4\" \n                                    />\n                                </form>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\n\nexport default connect(\n    mapStateToProps,\n    { createProject }\n)(AddProject);","import { SET_CURRENT_USER } from \"../actions/constants\";\n\nconst initialstate = {\n  user: {},\n  isValidToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialstate, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isValidToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"../actions/constants\";\n\nconst initialstate = {\n    project_tasks:[],\n    project_task: {}\n};\n\nexport default function(state=initialstate, action) {\n    switch(action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n            \n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSequence !== action.payload\n                  )\n            }\n        \n        default:\n            return state;\n    }\n\n}","import { GET_ERRORS } from \"../actions/constants\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        \n        default:\n            return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/constants\";\n\nconst initialstate = {\n    projects: [],\n    project: {}\n}\n\nexport default function(state=initialstate, action) {\n    switch(action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\n\nexport default combineReducers({\n    errors: errorReducer,\n    projects: projectReducer,\n    backlog: backlogReducer,\n    auth: authReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from 'react-redux'\nimport { getProject, createProject } from '../../actions/projectAction'\nimport classnames from 'classnames'\n\nclass UpdateProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n                id: \"\",\n                projectName: \"\",\n                projectIdentifier: \"\",\n                description: \"\",\n                start_date: \"\",\n                end_date: \"\",\n                errors: {}\n        }\n\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        }\n\n        this.props.createProject(updateProject, this.props.history);\n        \n       \n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n            console.log(this.state.errors)\n        }\n\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        })\n\n        \n    }\n\n\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        \n\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.projectName\n                                        })} \n                                        placeholder=\"Project Name\" \n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.projectName}\n                                        </div>\n                                    )} \n                                    <p></p>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                        disabled />\n                                </div>\n                                <p></p>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.description\n                                        })}\n                                        placeholder=\"Project Description\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )}  \n                                    <p></p>\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange} />\n                                </div>\n                                <p></p>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"end_date\"\n                                        value={this.state.end_date} \n                                        onChange={this.onChange}\n                                        />\n                                </div>\n                                <p></p>\n        \n                                <input \n                                    type=\"submit\" \n                                    className=\"btn btn-secondary btn-block mt-4\"\n                                     />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project: state.projects.project,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps,\n    { getProject, createProject }\n)(UpdateProject)","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-secondary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./constants\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n          });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n          });\n    }\n}\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n          }); \n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n          });\n    }\n}\n\nexport const getProjectTask = (backlog_id, pt_id, history)  => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n          }); \n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n          });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n          });\n    }\n}\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n    if (\n      window.confirm(\n        `You are deleting project task ${pt_id}, this action cannot be undone`\n      )\n    ) {\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: DELETE_PROJECT_TASK,\n        payload: pt_id\n      });\n    }\n  };\n  ","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProejctTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks } = this.props;\n\n    const tasks = project_tasks.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      // console.log(tasks[i]);\n\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogAction\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-dark mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n        this.state.projectIdentifier,\n        newTask,\n        this.props.history\n      );\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({ errors: nextProps.errors });\n        }\n      }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-secondary\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Create Project Task</h4>\n              <h6 className=\"text-center\">Project Name: {this.state.projectIdentifier}</h6>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.summary\n                      })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                   {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group  my-3\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group  my-3\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group  my-3\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group my-3\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-secondary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => ({\n    errors: state.errors\n  });\n  \n  export default connect(\n    mapStateToProps,\n    { addProjectTask }\n  )(AddProjectTask);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-secondary\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                </div>\n                {errors.summary && (\n                  <div className=\"invalid-feedback\">{errors.summary}</div>\n                )}\n                <div className=\"form-group my-3\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                \n                <div className=\"form-group my-3\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group my-3\">\n                  <select\n                    className=\"form-control form-control-lg my-3\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-secondary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass WelcomePage extends Component {\n\n  componentDidMount() {\n    console.log(this.props.auth)\n    if (this.props.auth.isValidToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n        <div className=\"landing\">\n          <div className=\"light-overlay landing-inner text-dark\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-12 text-center\">\n                  <h1 className=\"display-3 mb-4\">\n                    Personal Agile Develop Tool\n                  </h1>\n                  <p className=\"lead\">\n                    Create your account to join active projects or start your own\n                  </p>\n                  <hr />\n                  \n                  <Link className=\"btn btn-lg btn-secondary mr-2\" style={{ marginRight: 10 }} to=\"/register\">\n                    Sign Up\n                  </Link>\n                  <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                    Login\n                  </Link>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nWelcomePage.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WelcomePage);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/authAction\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isValidToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isValidToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-secondary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { createUser } from \"../../actions/authAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createUser(user, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isValidToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Fullname\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                    required\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    required\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group my-3\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-secondary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { createUser })(Register);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nfunction AuthRoute({ component: Component, auth, ...otherProps }) {\n  return (\n    <Route\n      {...otherProps}\n      render={(props) =>\n        auth.isValidToken === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n}\n\nAuthRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddPoject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProejctTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProejctTasks/UpdateProjectTask\";\nimport WelcomePage from \"./components/Layout/WelcomePage\";\nimport Login from \"./components/UserAuth/Login\";\nimport Register from \"./components/UserAuth/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./components/Utils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/constants\";\nimport { logout } from \"./actions/authAction\";\nimport AuthRoute from \"./components/Utils/AuthRoute\";\n\nconst jwtToken = localStorage.getItem(\"jwtToken\");\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwt = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwt,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwt.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={WelcomePage} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <AuthRoute exact path=\"/dashboard\" component={Dashboard} />\n              <AuthRoute exact path=\"/addProject\" component={AddPoject} />\n              <AuthRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <AuthRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <AuthRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <AuthRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootswatch/dist/flatly/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}